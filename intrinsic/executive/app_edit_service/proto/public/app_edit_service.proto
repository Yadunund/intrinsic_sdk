// Copyright 2023 Intrinsic Innovation LLC
// Intrinsic Proprietary and Confidential
// Provided subject to written agreement between the parties.



syntax = "proto3";

package intrinsic.application;



service AppEditService {
  
  

  // Fetch the notebooks of the running application.
  rpc FetchProcessNotebooks(FetchProcessNotebooksRequest)
      returns (FetchProcessNotebooksResponse);

  // Save the notebooks in the running application.
  // All notebooks in the process are removed and replaced by the given
  // notebooks. All other runnables are unaffected.
  rpc SaveProcessNotebooks(SaveProcessNotebooksRequest)
      returns (SaveProcessNotebooksResponse);

  // Adds a FileReference for this file to the data files of the current
  // process. The file content is uploaded to CAS on GCS.
  rpc SetProcessDataFile(SetProcessDataFileRequest)
      returns (SetProcessDataFileResponse) {}

  // Deletes the FileReference with the given Path from the data files of the
  // current process.
  rpc DeleteProcessDataFile(DeleteProcessDataFileRequest)
      returns (DeleteProcessDataFileResponse) {}

  // Changes the path of the FileReference with a matching path in the data
  // files of the current process.
  rpc RenameProcessDataFile(RenameProcessDataFileRequest)
      returns (RenameProcessDataFileResponse) {}
}

message FetchProcessNotebooksRequest {}

message FetchProcessNotebooksResponse {
  // A map with all process notebooks.
  // The key is the runnable key, the value is the URI of the notebook.
  map<string, string> notebooks = 1;
}

message SaveProcessNotebooksRequest {
  // A map with all process notebooks.
  // The key is the runnable key, the value is the URI of the notebook.
  map<string, string> notebooks = 1;
}

message SaveProcessNotebooksResponse {}

message SetProcessDataFileRequest {
  // The file content.
  bytes content = 1;
  // The filepath in the conatiner filesystem.
  // For jupyter data files this is /tmp/data/<filename>
  string path = 2;
}

message SetProcessDataFileResponse {}

message DeleteProcessDataFileRequest {
  // The filepath in the conatiner filesystem.
  string path = 1;
}

message DeleteProcessDataFileResponse {}

message RenameProcessDataFileRequest {
  // The old filepath in the conatiner filesystem.
  string old_path = 1;
  // The new filepath in the conatiner filesystem.
  string new_path = 2;
}

message RenameProcessDataFileResponse {}
