// Copyright 2023 Intrinsic Innovation LLC
// Intrinsic Proprietary and Confidential
// Provided subject to written agreement between the parties.

syntax = "proto3";

package intrinsic_proto.catalog;

import "google/protobuf/timestamp.proto";
import "intrinsic/assets/proto/tag.proto";
import "intrinsic/executive/proto/behavior_tree.proto";
import "intrinsic/kubernetes/workcell_spec/proto/image.proto";

// Information about a skill in the catalog.
message SkillMeta {
  // The basename of the skill
  string name = 1;

  // The vendor for the skill
  string vendor = 2;

  // The name of the package for the skill.
  string package_name = 3;

  // The version in sem-ver format
  string version = 4;

  // The time that this update became available
  google.protobuf.Timestamp update_time = 5;

  // The id of this skill, formatted as: <package_name>.<name>
  string id = 6;

  // The fully-qualified globally unique id of the skill. formatted as:
  // <package_name>.<name>.<version>
  string id_version = 7;

  // Release notes for this version of the Skill
  string release_notes = 8;

  // doc string for this version of the Skill
  string doc_string = 9;

  // Release tag for this version of the Skill
  Tag tag = 10;
}

message ListSkillsRequest {
  // Upper limit for the returned page size, i.e. the service might return fewer
  // results.
  //
  // Default behavior: returns a page size of 20. A page_size of 0 will result
  // in default behavior.
  //
  // Maximum value is 200. If this is exceeded, returns 200.
  int64 page_size = 1;

  // If the page token is empty, up to `page_size` first elements of the
  // collection will be returned. On subsequent requests, set the
  // `next_page_token` obtained from the previous call to retrieve the next
  // page.
  string page_token = 2;

  enum ViewType {
    VIEWTYPE_UNSPECIFIED = 0;
    BASIC = 1;
  }

  ViewType view = 3;

  message Filter {
    // Filter for well-known tags.
    optional Tag tag = 1;

    // Optional. If provided, filter results by `id`. Must provide
    // the complete `id` or a prefix.
    optional string id = 2;
  }

  // Optional. Apply a filter to the query to retrieve a filtered set of
  // results.
  //
  // N.B.: we name this field `strict_filter` for now, in case we decide to
  // adopt the suggested more generic filtering specified in
  // https://google.aip.dev/160.
  optional Filter strict_filter = 4;
}

message ListSkillsResponse {
  // The Skills available to the user in the Catalog. Only returns the latest
  // versions.
  repeated SkillMeta skills = 1;

  // Pass this token to the subsequent list requests in to obtain the next page.
  string next_page_token = 2;
}

message ListSkillVersionsRequest {
  // The skill id (see SkillMeta).
  string id = 1;
}

message ListSkillVersionsResponse {
  repeated SkillMeta skills = 1;
}

message CreateSkillReleaseRequest {
  // The basename of the Skill
  string name = 1;

  // The vendor for the Skill
  string vendor = 2;

  string package_name = 3;

  // The version in sem-ver format
  string version = 4;

  // Release notes for this version of the Skill
  string release_notes = 5;

  // doc string for this version of the Skill
  string doc_string = 6;

  oneof deployment_type {
    // Container image for skill with service.
    workcell_spec.v1.Image image = 7 [deprecated = true];
    // Parameterizable Behavior Tree.
    executive.BehaviorTree behavior_tree = 8;
  }

  // Release tag for this version of the Skill
  optional Tag tag = 11;
}

message CreateSkillResponse {}

service SkillCatalog {
  // Retrieves a list of the SkillMeta in the Catalog
  rpc ListSkills(ListSkillsRequest) returns (ListSkillsResponse);

  // Retrieves a list of all versions of a particular Skill that are in the
  // catalog.
  rpc ListSkillVersions(ListSkillVersionsRequest)
      returns (ListSkillVersionsResponse);

  // Creates the skill in the catalog
  rpc CreateSkill(CreateSkillReleaseRequest) returns (CreateSkillResponse);
}
